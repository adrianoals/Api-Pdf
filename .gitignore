# Node.js dependencies
node_modules/
package-lock.json

# Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*

# DiretÃ³rios do sistema operacional
.DS_Store
Thumbs.db

# Arquivos temporÃ¡rios
*.tmp
*.swp
*.swo
*.swn

# ConfiguraÃ§Ãµes do editor de cÃ³digo
.vscode/
.idea/
*.sublime-workspace

# Arquivos de build e saÃ­da do Puppeteer
output/
*.pdf

# VariÃ¡veis de ambiente e credenciais sensÃ­veis (se houver)
.env
.env.local
.env.development
.env.production
.env.test
.env.*.local

# Cache do Puppeteer
puppeteer_cache/

# Outros arquivos desnecessÃ¡rios
.nyc_output/
coverage/
# ğŸ“Œ Node.js dependencies e pacotes de terceiros
node_modules/
package-lock.json
yarn.lock
pnpm-lock.yaml

# ğŸ“Œ Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
pnpm-debug.log*

# ğŸ“Œ Arquivos de sistema operacional
.DS_Store
Thumbs.db

# ğŸ“Œ Arquivos temporÃ¡rios e de cache
*.tmp
*.swp
*.swo
*.swn
.nyc_output/
coverage/
puppeteer_cache/

# ğŸ“Œ ConfiguraÃ§Ãµes do editor de cÃ³digo
.vscode/
.idea/
*.sublime-workspace

# ğŸ“Œ SaÃ­das do Puppeteer e arquivos de build
output/
*.pdf
dist/
build/

# ğŸ“Œ VariÃ¡veis de ambiente e credenciais sensÃ­veis
.env*
!.env.example # Mantenha um exemplo para referÃªncia

# ğŸ“Œ Ignorar pastas e volumes do Docker
docker-compose.override.yml
.dockerignore
docker-data/
docker-volumes/
*.pid

# ğŸ“Œ Ignorar imagens, containers e cache do Docker
**/node_modules
**/vendor

# ğŸ“Œ Ignorar logs e arquivos temporÃ¡rios
*.out
*.err
/tmp
